name: workspace-image-ci

on:
    workflow_dispatch:
        inputs:
            is_push_to_ghcr:
                description: push after build
                required: false
                type: boolean
                default: true
            is_matrix_test:
                description: only test the validity of matrix
                required: false
                type: boolean
                default: false
env:
    # TOKEN: ${{ secrets.GITHUB_TOKEN }}
    TOKEN: ${{ secrets.PACKAGE_TOKEN }}

jobs:
    load-targets:
        runs-on: ubuntu-latest
        outputs:
            targets: ${{ steps.set-data.outputs.targets }}
        steps:
            - uses: actions/checkout@v3
            - id: set-data
              working-directory: ./CTR_WORKSPACE
              run: |
                  fp=./targets_matrix.json
                  if [ -e $fp ]; then
                    echo "targets=$(cat $fp | jq -c)" >> $GITHUB_OUTPUT
                  else
                    echo "$fp not found"
                    exit 1
                  fi
    build-and-push-to-ghcr:
        needs: load-targets
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix: ${{ fromJSON(needs.load-targets.outputs.targets) }}
        env:
            REGISTRY: ghcr.io
            IMAGE_NAME: workspace
        outputs:
            outputs1: ${{ github.repository_owner }}
            outputs2: ${{ github.actor }}
        steps:
            - uses: actions/checkout@v3
            - name: Login
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.repository_owner }}
                  password: ${{ env.TOKEN }}
            - name: Downcase Repo
              run: |
                  echo "REPO=${GITHUB_REPOSITORY_OWNER,,}/${IMAGE_NAME,,}" >> ${GITHUB_ENV}
            - name: Build tags for CUDA image
              if: ${{ matrix.cuda_version }}
              run: |
                  SHA="${GITHUB_SHA::7}"
                  IFS=,
                  for tag in $(echo ${{ matrix.cuda_version }},${{ matrix.extra_tags }}); do
                    if [ -n $tag ]; then
                      echo "${REGISTRY}/${REPO}:cuda${tag}" >> .tags
                      echo "${REGISTRY}/${REPO}:cuda${tag}.${SHA}" >> .tags
                    fi
                  done
                  echo "EXTRA_TAGS<<EOF" >> $GITHUB_ENV
                  cat .tags >> $GITHUB_ENV
                  echo "EOF" >> $GITHUB_ENV
            - name: Build tags for non-CUDA image
              # matrix.extra_tags is required
              if: ${{ !matrix.cuda_version }}
              run: |
                  SHA="${GITHUB_SHA::7}"
                  IFS=,
                  for tag in $(echo ${{ matrix.extra_tags }}); do
                    if [ -n $tag ]; then
                      echo "${REGISTRY}/${REPO}:${tag}" >> .tags
                      echo "${REGISTRY}/${REPO}:${tag}.${SHA}" >> .tags
                    fi
                  done
                  if [ -f .tags ]; then
                    echo "EXTRA_TAGS<<EOF" >> $GITHUB_ENV
                    cat .tags >> $GITHUB_ENV
                    echo "EOF" >> $GITHUB_ENV
                  fi
            - name: Build
              if: ${{ !fromJSON(github.event.inputs.is_matrix_test) && env.EXTRA_TAGS }}
              uses: docker/build-push-action@v3
              with:
                  context: ./CTR_WORKSPACE
                  file: ${{ matrix.dockerfile }}
                  push: ${{ fromJSON(github.event.inputs.is_push_to_ghcr) }}
                  tags: ${{ env.EXTRA_TAGS }}
                  build-args: |
                      BASE_UBUNTU=${{ matrix.base_ubuntu }}
                      CUDA_VER=${{ matrix.cuda_version }}
